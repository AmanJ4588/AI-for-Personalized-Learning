import streamlit as st
import requests

#backend API URL
BACKEND_URL = "http://127.0.0.1:5000" 

# Language Dictionary (Static Text)
translations = {
    "en": {
        "title": "тЪЩ Preferences",
        "description": "Please fill out the form to personalize your learning experience.",
        "grade": "What is your current grade/class level?",
        "stream": "Which stream are you in?",
        "degree": "Which degree are you pursuing?",
        "subjects_help": "Which subjects do you need the most help with?",
        "preferred_lang": "What is your preferred language for learning?",
        "hobbies": "What are your hobbies?",
        "career_asp": "Do you have any career aspirations?",
        "real_world_application": "Would you like to relate studies to real-world applications?",
        "study_hours": "How many hours per day do you study?",
        "preparing_for_exam": "Are you preparing for any upcoming exams?",
        "exam_options": "Which exam(s) are you preparing for?",
        "study_challenges": "Do you face any challenges while studying?",
        "challenge_options": "What is your biggest challenge in studying?",
        "submit": "Save Preferences"
    },
    "hi": {  # Hindi Translations
        "title": "тЪЩ рдкреНрд░рд╛рдердорд┐рдХрддрд╛рдПрдБ",
        "description": "рдХреГрдкрдпрд╛ рдЕрдкрдиреЗ рд╕реАрдЦрдиреЗ рдХреЗ рдЕрдиреБрднрд╡ рдХреЛ рд╡реНрдпрдХреНрддрд┐рдЧрдд рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдлрд╝реЙрд░реНрдо рднрд░реЗрдВред",
        "grade": "рдЖрдк рд╡рд░реНрддрдорд╛рди рдореЗрдВ рдХрд┐рд╕ рдХрдХреНрд╖рд╛ рдореЗрдВ рд╣реИрдВ?",
        "stream": "рдЖрдк рдХрд┐рд╕ рд╕реНрдЯреНрд░реАрдо рдореЗрдВ рд╣реИрдВ?",
        "degree": "рдЖрдк рдХреМрди рд╕реА рдбрд┐рдЧреНрд░реА рдХрд░ рд░рд╣реЗ рд╣реИрдВ?",
        "subjects_help": "рдЖрдкрдХреЛ рдХрд┐рди рд╡рд┐рд╖рдпреЛрдВ рдореЗрдВ рд╕рдмрд╕реЗ рдЕрдзрд┐рдХ рд╕рд╣рд╛рдпрддрд╛ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реИ?",
        "preferred_lang": "рдЖрдкрдХреА рдкрд╕рдВрджреАрджрд╛ рднрд╛рд╖рд╛ рдХреНрдпрд╛ рд╣реИ?",
        "hobbies": "рдЖрдкрдХреЗ рд╢реМрдХ рдХреНрдпрд╛ рд╣реИрдВ?",
        "career_asp": "рдХреНрдпрд╛ рдЖрдкрдХреЗ рдкрд╛рд╕ рдХреЛрдИ рдХрд░рд┐рдпрд░ рдЖрдХрд╛рдВрдХреНрд╖рд╛ рд╣реИ?",
        "real_world_application": "рдХреНрдпрд╛ рдЖрдк рдЕрдкрдиреЗ рдЕрдзреНрдпрдпрди рдХреЛ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рджреБрдирд┐рдпрд╛ рд╕реЗ рдЬреЛрдбрд╝рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?",
        "study_hours": "рдЖрдк рдкреНрд░рддрд┐ рджрд┐рди рдХрд┐рддрдиреЗ рдШрдВрдЯреЗ рдкрдврд╝рд╛рдИ рдХрд░рддреЗ рд╣реИрдВ?",
        "preparing_for_exam": "рдХреНрдпрд╛ рдЖрдк рдХрд┐рд╕реА рдЖрдЧрд╛рдореА рдкрд░реАрдХреНрд╖рд╛ рдХреА рддреИрдпрд╛рд░реА рдХрд░ рд░рд╣реЗ рд╣реИрдВ?",
        "exam_options": "рдЖрдк рдХреМрди рд╕реА рдкрд░реАрдХреНрд╖рд╛ рдХреА рддреИрдпрд╛рд░реА рдХрд░ рд░рд╣реЗ рд╣реИрдВ?",
        "study_challenges": "рдХреНрдпрд╛ рдЖрдкрдХреЛ рдЕрдзреНрдпрдпрди рдореЗрдВ рдХреЛрдИ рдХрдард┐рдирд╛рдИ рд╣реЛрддреА рд╣реИ?",
        "challenge_options": "рдЕрдзреНрдпрдпрди рдореЗрдВ рдЖрдкрдХреА рд╕рдмрд╕реЗ рдмрдбрд╝реА рдЪреБрдиреМрддреА рдХреНрдпрд╛ рд╣реИ?",
        "submit": "рдкреНрд░рд╛рдердорд┐рдХрддрд╛рдПрдБ рд╕рд╣реЗрдЬреЗрдВ"
    },
    "ta": {  # Tamil Translations
        "title": "тЪЩ роорпБройрпНройрпБро░ро┐роорпИроХро│рпН",
        "description": "роЙроЩрпНроХро│рпН роХро▒рпНро▒ро▓рпН роЕройрпБрокро╡родрпНродрпИ родройро┐рокрпНрокропройро╛роХрпНроХ родропро╡рпБроЪрпЖропрпНродрпБ рокроЯро┐ро╡родрпНродрпИ роиро┐ро░рокрпНрокро╡рпБроорпН.",
        "grade": "роирпАроЩрпНроХро│рпН роОроирпНрод ро╡роХрпБрокрпНрокро┐ро▓рпН роЙро│рпНро│рпАро░рпНроХро│рпН?",
        "stream": "роирпАроЩрпНроХро│рпН роОроирпНрод рокро┐ро░ро┐ро╡ро┐ро▓рпН роЗро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│рпН?",
        "degree": "роирпАроЩрпНроХро│рпН роОроирпНродрокрпН рокроЯрпНроЯродрпНродрпИрокрпН рокроЯро┐роХрпНроХро┐ро▒рпАро░рпНроХро│рпН?",
        "subjects_help": "роЙроЩрпНроХро│рпБроХрпНроХрпБ роЕродро┐роХрооро╛роХ роЙродро╡ро┐ родрпЗро╡рпИропро╛рой рокро╛роЯроЩрпНроХро│рпН роОройрпНрой?",
        "preferred_lang": "роЙроЩрпНроХро│рпБроХрпНроХрпБрокрпН рокро┐роЯро┐родрпНрод роорпКро┤ро┐ роОродрпБ?",
        "hobbies": "роЙроЩрпНроХро│рпН рокрпКро┤рпБродрпБрокрпЛроХрпНроХрпБроХро│рпН роОройрпНрой?",
        "career_asp": "роЙроЩрпНроХро│рпБроХрпНроХрпБ роПродрпЗройрпБроорпН родрпКро┤ро┐ро▓рпН роЗро▓роХрпНроХрпБроХро│рпН роЙро│рпНро│ройро╡ро╛?",
        "real_world_application": "роЙроЩрпНроХро│рпН роХро▓рпНро╡ро┐ропрпИ роЙрогрпНроорпИропро╛рой роЙро▓роХрокрпН рокропройрпНрокро╛роЯрпБроХро│рпБроЯройрпН родрпКроЯро░рпНрокрпБрокроЯрпБродрпНрод ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│ро╛?",
        "study_hours": "роирпАроЩрпНроХро│рпН роТро░рпБ роиро╛ро│рпИроХрпНроХрпБ роОро╡рпНро╡ро│ро╡рпБ роирпЗро░роорпН рокроЯро┐роХрпНроХро┐ро▒рпАро░рпНроХро│рпН?",
        "preparing_for_exam": "роирпАроЩрпНроХро│рпН ро╡ро░ро╡ро┐ро░рпБроХрпНроХрпБроорпН родрпЗро░рпНро╡рпБроХрпНроХрпБродрпН родропро╛ро░ро╛роХрпБроХро┐ро▒рпАро░рпНроХро│ро╛?",
        "exam_options": "роирпАроЩрпНроХро│рпН роОроирпНрод родрпЗро░рпНро╡рпБроХрпНроХрпБродрпН родропро╛ро░ро╛роХро┐ро▒рпАро░рпНроХро│рпН?",
        "study_challenges": "роЙроЩрпНроХро│рпБроХрпНроХрпБ рокроЯро┐рокрпНрокродро┐ро▓рпН роПродрпЗройрпБроорпН роЪро┐роХрпНроХро▓рпНроХро│рпН роЙро│рпНро│ройро╡ро╛?",
        "challenge_options": "роЙроЩрпНроХро│рпН рокроЯро┐рокрпНрокро┐ро▓рпН рооро┐роХрокрпНрокрпЖро░ро┐роп роЪро┐роХрпНроХро▓рпН роОродрпБ?",
        "submit": "роорпБройрпНройрпБро░ро┐роорпИроХро│рпИроЪрпН роЪрпЗрооро┐роХрпНроХро╡рпБроорпН"
    }
}

def preferences_page():
    # Select Language
    lang_options = {"English": "en", "рд╣рд┐рдиреНрджреА": "hi", "родрооро┐ро┤рпН": "ta"}
    lang_choice = st.sidebar.selectbox("ЁЯМН Select Language:", list(lang_options.keys()))
    selected_lang = lang_options[lang_choice]

    st.title(translations[selected_lang]["title"])
    st.write(translations[selected_lang]["description"])

    # User Inputs
    grade = st.selectbox(translations[selected_lang]["grade"], [
        "1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th",
        "9th", "10th", "11th", "12th", "Undergraduate", "Postgraduate"
    ])

    # Stream & Degree
    stream, degree = "None", "None"
    if grade in ["11th", "12th"]:
        stream = st.selectbox(translations[selected_lang]["stream"], ["Science", "Commerce", "Arts"])
    elif grade == "Undergraduate":
        degree = st.selectbox(translations[selected_lang]["degree"], ["B.Tech", "BBA", "B.Com", "B.Sc"])
    elif grade == "Postgraduate":
        degree = st.selectbox(translations[selected_lang]["degree"], ["M.Tech", "MBA", "M.Com", "M.Sc"])

    subjects_help = st.text_input(translations[selected_lang]["subjects_help"])
    preferred_lang = st.text_input(translations[selected_lang]["preferred_lang"])
    hobbies = st.text_input(translations[selected_lang]["hobbies"])
    career_asp = st.text_input(translations[selected_lang]["career_asp"])
    real_world_application = st.radio(translations[selected_lang]["real_world_application"], ["Yes", "No"])
    study_hours = st.radio(translations[selected_lang]["study_hours"], ["<1 hour", "1-2 hours", "2-4 hours", ">4 hours"])
    preparing_for_exam = st.radio(translations[selected_lang]["preparing_for_exam"], ["Yes", "No"])
    selected_exams = st.multiselect(translations[selected_lang]["exam_options"], ["JEE", "NEET", "UPSC", "CUET"]) if preparing_for_exam == "Yes" else []

    study_challenges = st.radio(translations[selected_lang]["study_challenges"], ["Yes", "No"])
    challenges_list = st.multiselect(translations[selected_lang]["challenge_options"], [
        "Time management", "Understanding concepts", "Memorization", "Practice problems", "Lack of motivation", "Distractions"
    ]) if study_challenges == "Yes" else []

    # Check if user is logged in
    if "user" in st.session_state:
        username = st.session_state["user"]["username"]

        # Submit Preferences
        if st.button(translations[selected_lang]["submit"]):
            preferences_data = {
                "grade": grade,
                "stream": stream,
                "degree": degree,
                "subjects_help": subjects_help,
                "preferred_lang": preferred_lang,
                "hobbies": hobbies,
                "career_asp": career_asp,
                "real_world_application": real_world_application,
                "study_hours": study_hours,
                "preparing_for_exam": preparing_for_exam,
                "selected_exams": selected_exams,
                "study_challenges": study_challenges,
                "challenges_list": challenges_list
            }
            
            response = requests.post(f"{BACKEND_URL}/save_preference", json={"username": username, **preferences_data})
            st.success("тЬЕ Preferences saved successfully!" if response.status_code == 200 else "тЭМ Error saving preferences.")
    else:
        st.warning("Please log in to save your preferences.")

